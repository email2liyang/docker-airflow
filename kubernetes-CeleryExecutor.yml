
apiVersion: v1
kind: Namespace
metadata:
  name: airflow

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: airflow
spec:
  type: NodePort
  ports:
  - name: pgql
    port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgres

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: airflow
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:9.6
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/postgresql/data
          subPath: pgdata
        env:
        - name: POSTGRES_USER
          value: airflow
        - name: POSTGRES_PASSWORD
          value: airflow
        - name: POSTGRES_DB
          value: airflow
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
      # No pre-stop hook is required, a SIGTERM plus some time is all that's
      # needed for graceful shutdown of a node.
      terminationGracePeriodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: 1Gi

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
  namespace: airflow
spec:
  revisionHistoryLimit: 2
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: redis:3.2.7
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
        ports:
        - containerPort: 6379

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: airflow
  labels:
    app: redis
spec:
  ports:
    # the port that this service should serve on
  - port: 6379
    targetPort: 6379
  type: NodePort
  selector:
    app: redis

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-celery-webserver
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-celery-webserver
  template:
    metadata:
      labels:
        name: airflow-celery-webserver
        app: airflow-celery-webserver
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox
        env:
        - name: PG_HOST
          value: postgres
        - name: PG_PORT
          value: "5432"
        command: [ "/bin/sh", "-c", "until nc -zv $PG_HOST $PG_PORT -w1; do echo 'waiting for db'; sleep 1; done" ]
      containers:
      - name: airflow-celery-webserver
        image: docker.io/email2liyang/docker-airflow:1.10.2
        imagePullPolicy: Always
        env:
        - name: LOAD_EX
          value: "n"
        - name: EXECUTOR
          value: Celery
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_PORT
          value: "5432"
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        readinessProbe:
          httpGet:
            path: /admin/
            port: 8080
          initialDelaySeconds: 8
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /admin/
            port: 8080
          initialDelaySeconds: 8
          timeoutSeconds: 10
        ports:
        - name: webserver
          containerPort: 8080
        command: ["/entrypoint.sh"]
        args: ["webserver"]
---

apiVersion: v1
kind: Service
metadata:
  name: airflow-celery-webserver
  namespace: airflow
spec:
  type: NodePort
  ports:
  - name: webserver
    port: 8080
    targetPort: webserver
  selector:
    app: airflow-celery-webserver
